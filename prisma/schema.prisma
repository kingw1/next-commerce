// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mongodb"
    url      = env("DATABASE_URL")
}

model Coupon {
    id         String    @id @default(auto()) @map("_id") @db.ObjectId
    title      String
    couponCode String
    expiryDate DateTime
    createdAt  DateTime  @default(now())
    updatedAt  DateTime? @updatedAt
}

model Banner {
    id        String    @id @default(auto()) @map("_id") @db.ObjectId
    title     String
    link      String
    imageUrl  String
    isActive  Boolean
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Category {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    slug        String  @unique
    description String?
    imageUrl    String?
    isActive    Boolean

    products Product[]

    marketIds String[] @db.ObjectId
    markets   Market[] @relation(fields: [marketIds], references: [id])

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Market {
    id          String  @id @default(auto()) @map("_id") @db.ObjectId
    title       String
    slug        String  @unique
    description String?
    imageUrl    String?
    isActive    Boolean

    categoryIds String[]   @db.ObjectId
    categories  Category[] @relation(fields: [categoryIds], references: [id])

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Product {
    id           String   @id @default(auto()) @map("_id") @db.ObjectId
    title        String
    slug         String   @unique
    description  String?
    sku          String?
    barcode      String?
    productPrice Float
    salePrice    Float
    imageUrl     String?
    tags         String[]
    isActive     Boolean

    categoryId String   @db.ObjectId
    category   Category @relation(fields: [categoryId], references: [id])

    farmerId String @db.ObjectId
    farmer   Farmer @relation(fields: [farmerId], references: [id])

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}

model Farmer {
    id                 String  @id @default(auto()) @map("_id") @db.ObjectId
    code               String
    name               String
    phone              String
    email              String
    physicalAddress    String?
    contactPerson      String?
    contactPersonPhone String?
    terms              String?
    notes              String?
    isActive           Boolean

    products Product[]

    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
}
